{
  "version": 3,
  "sources": ["../../reflect-metadata/Reflect.js", "../../type-json-mapper/esm/lib/utils.js", "../../type-json-mapper/esm/decorator.js", "../../type-json-mapper/esm/lib/transform.js", "../../type-json-mapper/esm/methods.js"],
  "sourcesContent": ["/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process[\"env\" + \"\"] && process[\"env\" + \"\"][\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 \u00A7 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", "import 'reflect-metadata';\r\nexport var META_KEY = '__TRANSKEY__';\r\nexport var getJsonProperty = function (target, propertyKey) {\r\n    return typeof Reflect.getMetadata === 'function' && Reflect.getMetadata(META_KEY, target, propertyKey);\r\n};\r\nexport var setProperty = function (value) {\r\n    return typeof Reflect.metadata === 'function'\r\n        ? Reflect.metadata(META_KEY, value)\r\n        : function (target, propertyKey) {\r\n            console.warn('Reflect.metadata \u672A\u6B63\u786E\u52A0\u8F7D\u3002');\r\n        };\r\n};\r\nexport var isObject = function (target) { return Object.prototype.toString.call(target) === '[object Object]'; };\r\nexport var isArray = function (target) { return Object.prototype.toString.call(target) === '[object Array]'; };\r\nexport var hasAnyNullOrUndefined = function () {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return args.some(function (arg) { return arg === null || arg === undefined; });\r\n};\r\nexport var isNotBasicType = function (target) { return ['string', 'number', 'boolean'].every(function (type) { return type !== typeof target; }); };\r\nexport var isInvalidDate = function (date) { return date instanceof Date && isNaN(date.getTime()); };\r\nexport var formatDate = function (timestamp, format) {\r\n    if (format === void 0) { format = 'Y-M-D h:m:s'; }\r\n    var date = new Date(timestamp);\r\n    if (isInvalidDate(date)) {\r\n        return timestamp;\r\n    }\r\n    var formatNumber = function (n) { return (n >= 10 ? \"\" + n : \"0\" + n); };\r\n    return format\r\n        .replace('Y', \"\" + date.getFullYear())\r\n        .replace('M', formatNumber(date.getMonth() + 1))\r\n        .replace('D', formatNumber(date.getDate()))\r\n        .replace('h', formatNumber(date.getHours()))\r\n        .replace('m', formatNumber(date.getMinutes()))\r\n        .replace('s', formatNumber(date.getSeconds()));\r\n};\r\nexport var getRandomInt = function (min, max) {\r\n    if (!min || !max) {\r\n        return 0;\r\n    }\r\n    var range = max - min;\r\n    var rand = Math.random();\r\n    return min + Math.round(rand * range);\r\n};\r\nexport var getRandomString = function (length, chars) {\r\n    if (chars === void 0) { chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'; }\r\n    return !length ? '' : new Array(length).fill(0).reduce(function (res) { return \"\" + res + chars.charAt(Math.floor(Math.random() * chars.length)); }, '');\r\n};\r\nexport var getRandomFloat = function (length) {\r\n    if (!length) {\r\n        return 0;\r\n    }\r\n    var decimal = getRandomInt(1, length - 2);\r\n    var numStr = getRandomString(length, '123456789');\r\n    var floatStr = parseFloat(numStr.split('').reduce(function (res, char, index) { return \"\" + res + (length - index === decimal ? '.' : '') + char; }, ''));\r\n    return floatStr;\r\n};\r\n", "import { setProperty } from './lib/utils';\r\nexport var mapperProperty = function (key, type) {\r\n    return setProperty({\r\n        key: key,\r\n        type: type\r\n    });\r\n};\r\nexport var deepMapperProperty = function (key, Clazz) {\r\n    return setProperty({\r\n        key: key,\r\n        Clazz: Clazz\r\n    });\r\n};\r\nexport var filterMapperProperty = function (key, filter) {\r\n    return setProperty({\r\n        key: key,\r\n        filter: filter\r\n    });\r\n};\r\n", "import { formatDate, getRandomFloat, getRandomInt, getRandomString, isNotBasicType } from './utils';\r\nexport var transType = function (oriData, type) {\r\n    if (Array.isArray(oriData) && oriData.every(function (val) { return !isNotBasicType(val); })) {\r\n        return transArrayType(oriData, type);\r\n    }\r\n    if (isNotBasicType(oriData)) {\r\n        return oriData;\r\n    }\r\n    var value = null;\r\n    try {\r\n        switch (type) {\r\n            case 'string':\r\n                value = \"\" + oriData;\r\n                break;\r\n            case 'int':\r\n                value = parseInt(oriData, 10);\r\n                if (value !== value) {\r\n                    throw new Error('int\u7C7B\u578B\u8F6C\u6362\u5931\u8D25');\r\n                }\r\n                break;\r\n            case 'float':\r\n                value = parseFloat(oriData);\r\n                if (value !== value) {\r\n                    throw new Error('float\u7C7B\u578B\u8F6C\u6362\u5931\u8D25');\r\n                }\r\n                break;\r\n            case 'boolean':\r\n                value = Boolean(oriData);\r\n                break;\r\n            case 'date':\r\n                value = formatDate(oriData, 'Y-M-D');\r\n                break;\r\n            case 'time':\r\n                value = formatDate(oriData, 'h:m:s');\r\n                break;\r\n            case 'datetime':\r\n                value = formatDate(oriData);\r\n                break;\r\n            default:\r\n                value = oriData;\r\n                break;\r\n        }\r\n    }\r\n    catch (error) {\r\n        value = oriData;\r\n    }\r\n    return value;\r\n};\r\nexport var transArrayType = function (oriData, type) { return oriData.map(function (val) { return transType(val, type); }); };\r\nexport var mockByType = function (type, length) {\r\n    var value = '';\r\n    switch (type) {\r\n        case 'string':\r\n            value = getRandomString(length);\r\n            break;\r\n        case 'int':\r\n            value = getRandomInt(1, length);\r\n            break;\r\n        case 'float':\r\n            value = getRandomFloat(length);\r\n            break;\r\n        case 'boolean':\r\n            value = Math.random() <= 0.5;\r\n            break;\r\n        case 'date':\r\n            value = formatDate(new Date(), 'Y-M-D');\r\n            break;\r\n        case 'time':\r\n            value = formatDate(new Date(), 'h:m:s');\r\n            break;\r\n        case 'datetime':\r\n            value = formatDate(new Date());\r\n            break;\r\n        default:\r\n            value = '';\r\n            break;\r\n    }\r\n    return value;\r\n};\r\n", "import { mockByType, transType } from './lib/transform';\r\nimport { getJsonProperty, getRandomInt, hasAnyNullOrUndefined, isArray, isObject } from './lib/utils';\r\nvar TAG = '[type-json-mapper';\r\nexport var deserialize = function (Clazz, json) {\r\n    if (hasAnyNullOrUndefined(Clazz, json)) {\r\n        throw new Error(TAG + \"/deserialize]: missing Clazz or json\");\r\n    }\r\n    if (!isObject(json)) {\r\n        throw new Error(TAG + \"/deserialize]: json is not a object\");\r\n    }\r\n    var instance = new Clazz();\r\n    var result = instance;\r\n    for (var _i = 0, _a = Object.keys(instance); _i < _a.length; _i++) {\r\n        var localKey = _a[_i];\r\n        var value = json[localKey];\r\n        var metaObj = getJsonProperty(instance, localKey) || {};\r\n        var _b = metaObj, type = _b.type, key = _b.key;\r\n        if (!['', 0, undefined].includes(key)) {\r\n            value = json[key];\r\n            if (typeof value !== 'undefined') {\r\n                value = transType(value, type);\r\n            }\r\n        }\r\n        var filter = metaObj.filter;\r\n        if (typeof filter === 'function') {\r\n            var tempVal = filter(value, json);\r\n            if (typeof tempVal !== 'undefined') {\r\n                value = tempVal;\r\n            }\r\n        }\r\n        var childClazz = metaObj.Clazz;\r\n        if (typeof childClazz !== 'undefined') {\r\n            if (isObject(value)) {\r\n                value = deserialize(childClazz, value);\r\n            }\r\n            if (isArray(value)) {\r\n                value = deserializeArr(childClazz, value);\r\n            }\r\n        }\r\n        if (typeof value !== 'undefined') {\r\n            result[localKey] = value;\r\n        }\r\n    }\r\n    return result;\r\n};\r\nexport var deserializeArr = function (Clazz, list) {\r\n    if (hasAnyNullOrUndefined(Clazz, list)) {\r\n        throw new Error(TAG + \"/deserializeArr]: missing Clazz or list\");\r\n    }\r\n    return list.map(function (ele) { return deserialize(Clazz, ele); });\r\n};\r\nexport var serialize = function (Clazz, json) {\r\n    if (hasAnyNullOrUndefined(Clazz, json)) {\r\n        throw new Error(TAG + \"/serialize]: missing Clazz or json\");\r\n    }\r\n    if (!isObject(json)) {\r\n        throw new Error(TAG + \"/serialize]: json is not a object\");\r\n    }\r\n    var result = {};\r\n    var instance = new Clazz();\r\n    for (var _i = 0, _a = Object.keys(instance); _i < _a.length; _i++) {\r\n        var localKey = _a[_i];\r\n        var value = json[localKey];\r\n        if (typeof value === 'undefined') {\r\n            continue;\r\n        }\r\n        var metaObj = getJsonProperty(instance, localKey) || {};\r\n        var childClazz = metaObj.Clazz;\r\n        if (typeof childClazz !== 'undefined') {\r\n            if (isObject(value)) {\r\n                value = serialize(childClazz, value);\r\n            }\r\n            if (isArray(value)) {\r\n                value = serializeArr(childClazz, value);\r\n            }\r\n        }\r\n        var key = metaObj.key;\r\n        result[key ? key : localKey] = value;\r\n    }\r\n    return result;\r\n};\r\nexport var serializeArr = function (Clazz, list) {\r\n    if (hasAnyNullOrUndefined(Clazz, list)) {\r\n        throw new Error(TAG + \"/serializeArr]: missing Clazz or list\");\r\n    }\r\n    return list.map(function (ele) { return serialize(Clazz, ele); });\r\n};\r\nexport function mock(Clazz, options) {\r\n    if (hasAnyNullOrUndefined(Clazz)) {\r\n        throw new Error(TAG + \"/mock]: missing Clazz\");\r\n    }\r\n    if (!options || typeof options !== 'object') {\r\n        options = {};\r\n    }\r\n    var instance = new Clazz();\r\n    var result = instance;\r\n    var _loop_1 = function (key) {\r\n        var _a = options.fieldLength, fieldLength = _a === void 0 ? {} : _a, _b = options.arrayFields, arrayFields = _b === void 0 ? [] : _b;\r\n        var value = '';\r\n        var metaObj = getJsonProperty(instance, key) || {};\r\n        var type = metaObj.type;\r\n        if (type) {\r\n            var length_1 = fieldLength[key] || 6;\r\n            value = mockByType(type, length_1);\r\n        }\r\n        var filter = metaObj.filter;\r\n        if (typeof filter === 'function') {\r\n            var tempVal = filter();\r\n            if (typeof tempVal !== 'undefined') {\r\n                value = tempVal;\r\n            }\r\n        }\r\n        var childClazz = metaObj.Clazz;\r\n        if (typeof childClazz !== 'undefined') {\r\n            if (arrayFields.includes(key)) {\r\n                value = new Array(getRandomInt(1, 18)).fill(0).map(function () { return mock(childClazz, options); });\r\n            }\r\n            else {\r\n                value = mock(childClazz, options);\r\n            }\r\n        }\r\n        result[key] = value;\r\n    };\r\n    for (var _i = 0, _a = Object.keys(instance); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        _loop_1(key);\r\n    }\r\n    return result;\r\n}\r\n"],
  "mappings": "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",
  "names": ["Reflect", "hasOwn", "MapIterator", "Map", "Set", "WeakMap", "key", "_a"]
}
