import{BrowserBreadcrumbTypes as t,BreadcrumbLevel as e,EventTypes as r,HttpTypes as s}from"@heimdallr-sdk/types";import{getUrlPath as o,replaceOld as i,generateUUID as n}from"@heimdallr-sdk/utils";var l=Object.defineProperty,p=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable,c=(t,e,r)=>e in t?l(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,u=(t,e)=>{for(var r in e||(e={}))a.call(e,r)&&c(t,r,e[r]);if(p)for(var r of p(e))h.call(e,r)&&c(t,r,e[r]);return t};function d(l={}){const{ignoreUrls:p=[],reportResponds:a=!1}=l,h=XMLHttpRequest.prototype;return{name:"XHRPlugin",monitor(t){const{initUrl:e,uploadUrl:r}=this.getContext(),s=this,n=[...p,r,e].map((t=>o(t)));i(h,"open",(t=>function(...e){this.httpCollect={req:{m:e[0]?e[0].toUpperCase():e[0],url:e[1]},res:{},t:s.getTime()},t.apply(this,e)})),i(h,"send",(e=>function(...r){const{req:i}=this.httpCollect,{url:l}=i;this.addEventListener("loadend",(function(){if(n.includes(o(l)))return;const{responseType:e,response:p,status:h}=this;i.data=r[0];const c=s.getTime();a&&-1!==["","json","text"].indexOf(e)&&(this.httpCollect.res.dat="object"==typeof p?JSON.stringify(p):p),this.httpCollect.res.sta=h,this.httpCollect.et=c-this.httpCollect.t,t(this.httpCollect)})),e.apply(this,r)}))},transform(o){const i=n(),{req:{m:l,url:p,dat:a},et:h=0,res:{sta:c}}=o;return this.breadcrumb.unshift({lid:i,bt:t.XHR,l:200!=c?e.WARN:e.INFO,msg:`${l} "${p}" width "${JSON.stringify(a)}" took ${h} ms`,t:this.getTime()}),{lid:i,t:this.getTime(),e:r.API,dat:u({st:s.XHR},o)}}}}export{d as default};
